{"ast":null,"code":"const GET_PINS = \"pins/getPins\";\nconst GET_ONE_PIN = \"pins/getOnePin\";\nconst ADD_PIN = \"pins/addPin\";\nconst EDIT_PIN = \"pins/editPin\";\nconst DELETE_PIN = \"pins/deletePin\";\nconst getPins = pins => {\n  return {\n    type: GET_PINS,\n    pins\n  };\n};\nconst getOnePin = pin => {\n  return {\n    type: GET_ONE_PIN,\n    pin\n  };\n};\nconst addPin = pin => {\n  return {\n    type: ADD_PIN,\n    pin\n  };\n};\nconst editPin = pin => {\n  return {\n    type: EDIT_PIN,\n    pin\n  };\n};\nconst deletePin = id => {\n  return {\n    type: DELETE_PIN,\n    id\n  };\n};\nexport const allPinsThunk = () => async dispatch => {\n  const res = await fetch(\"/api/pins/\");\n  const data = await res.json();\n  dispatch(getPins(data));\n  return res;\n};\nexport const onePinThunk = id => async dispatch => {\n  const res = await fetch(`/api/pins/${id}`);\n  const data = await res.json();\n  dispatch(getOnePin(data));\n  return res;\n};\nexport const makePinThunk = pin => async dispatch => {\n  const aws = await fetch(\"/api/images\");\n  const res = await fetch(\"/api/pins/new\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pin)\n  });\n  if (res.ok) {\n    const newPin = await res.json();\n    dispatch(addPin(newPin));\n    return newPin;\n  } else if (res.status < 500) {\n    const data = await res.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const editPinThunk = pin => async dispatch => {\n  const res = await fetch(`/api/pins/${pin.pinId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pin)\n  });\n  if (res.ok) {\n    const pinEdited = await res.json();\n    dispatch(editPin(pinEdited));\n    return pinEdited;\n  }\n};\nexport const deletePinThunk = id => async dispatch => {\n  const res = await fetch(`/api/pins/${id}`, {\n    method: \"DELETE\"\n  });\n  if (res.ok) {\n    dispatch(deletePin(id));\n  }\n};\nconst initialState = {};\nconst pinReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PINS:\n      let newState = {};\n      action.pins.pins.forEach(pin => {\n        newState[pin.id] = pin;\n      });\n      return newState;\n    case GET_ONE_PIN:\n      let newPinState = {};\n      newPinState[action.pin.id] = action.pin;\n      return newPinState;\n    case ADD_PIN:\n      let newAddPinState = {};\n      newAddPinState[action.pin.id] = action.pin;\n      return newAddPinState;\n    case EDIT_PIN:\n      let newEditPinState = {};\n      newEditPinState[action.pin.id] = action.pin;\n      return newEditPinState;\n    case DELETE_PIN:\n      let newDeletePinState = {};\n      delete newDeletePinState[action.id];\n      return newDeletePinState;\n    default:\n      return state;\n  }\n};\nexport default pinReducer;","map":{"version":3,"names":["GET_PINS","GET_ONE_PIN","ADD_PIN","EDIT_PIN","DELETE_PIN","getPins","pins","type","getOnePin","pin","addPin","editPin","deletePin","id","allPinsThunk","dispatch","res","fetch","data","json","onePinThunk","makePinThunk","aws","method","headers","body","JSON","stringify","ok","newPin","status","errors","editPinThunk","pinId","pinEdited","deletePinThunk","initialState","pinReducer","state","action","newState","forEach","newPinState","newAddPinState","newEditPinState","newDeletePinState"],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/store/pin.js"],"sourcesContent":["const GET_PINS = \"pins/getPins\";\nconst GET_ONE_PIN = \"pins/getOnePin\";\nconst ADD_PIN = \"pins/addPin\";\nconst EDIT_PIN = \"pins/editPin\";\nconst DELETE_PIN = \"pins/deletePin\";\n\nconst getPins = (pins) => {\n    return {\n      type: GET_PINS,\n      pins,\n    };\n  };\n\nconst getOnePin = (pin) => {\n    return {\n      type: GET_ONE_PIN,\n      pin,\n    };\n  };\n\nconst addPin = (pin) => {\n    return {\n      type: ADD_PIN,\n      pin,\n    };\n  };\n\nconst editPin = (pin) => {\n    return {\n      type: EDIT_PIN,\n      pin,\n    };\n  };\n\nconst deletePin = (id) => {\n    return {\n      type: DELETE_PIN,\n      id,\n    };\n  };  \n  export const allPinsThunk = () => async (dispatch) => {\n    const res = await fetch(\"/api/pins/\");\n    const data = await res.json();\n    dispatch(getPins(data));\n    return res;\n  };\n\n  export const onePinThunk = (id) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${id}`);\n    const data = await res.json();\n    dispatch(getOnePin(data));\n    return res;\n  };  \n\nexport const makePinThunk = (pin) => async (dispatch) => {\n\n    const aws = await fetch(\"/api/images\")\n\n\n    const res = await fetch(\"/api/pins/new\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(pin),\n    });\n  \n    if (res.ok) {\n      const newPin = await res.json();\n      dispatch(addPin(newPin));\n      return newPin;\n    } else if (res.status < 500) {\n          const data = await res.json();\n          if (data.errors) {\n              return data.errors;\n          }\n      } else {\n          return [\"An error occurred. Please try again.\"];\n      }\n  };  \n\nexport const editPinThunk = (pin) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${pin.pinId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(pin),\n    });\n  \n    if (res.ok) {\n      const pinEdited = await res.json();\n      dispatch(editPin(pinEdited));\n      return pinEdited;\n    }\n  };  \n\nexport const deletePinThunk = (id) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${id}`, {\n      method: \"DELETE\",\n    });\n  \n    if (res.ok) {\n      dispatch(deletePin(id));\n    }\n  };  \n\nconst initialState = {};\n\nconst pinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PINS:\n      let newState = {};\n      action.pins.pins.forEach((pin) => {\n        newState[pin.id] = pin;\n      });\n      return newState;\n    case GET_ONE_PIN:\n      let newPinState = {};\n        newPinState[action.pin.id] = action.pin;\n        return newPinState;\n    case ADD_PIN:\n      let newAddPinState = {}\n      newAddPinState[action.pin.id] = action.pin;\n      return newAddPinState;\n    case EDIT_PIN:\n        let newEditPinState = {}\n        newEditPinState[action.pin.id] = action.pin;\n        return newEditPinState;\n    case DELETE_PIN:\n      let newDeletePinState = {}\n      delete newDeletePinState[action.id]\n      return newDeletePinState;\n    default:\n      return state;\n  }\n};\n\nexport default pinReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}