{"ast":null,"code":"var _jsxFileName = \"/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/components/UploadImage/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPicture = () => {\n  _s();\n  const history = useHistory(); // so that we can redirect after the image upload is successful\n  const [image, setImage] = useState(null);\n  const [imageLoading, setImageLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"image\", image);\n\n    // aws uploads can be a bit slow—displaying\n    // some sort of loading message is a good idea\n\n    setImageLoading(true);\n    const res = await fetch('/api/images', {\n      method: \"POST\",\n      body: formData\n    });\n    if (res.ok) {\n      await res.json();\n      setImageLoading(false);\n      history.push(\"/images\");\n    } else {\n      setImageLoading(false);\n      console.log(\"error\");\n    }\n  };\n  const updateImage = e => {\n    const file = e.target.files[0];\n    setImage(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: updateImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), imageLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPicture, \"ZsySZeN5yNCrg8y6VlyYZZlPc3E=\", false, function () {\n  return [useHistory];\n});\n_c = UploadPicture;\nexport default UploadPicture;\nvar _c;\n$RefreshReg$(_c, \"UploadPicture\");","map":{"version":3,"names":["React","useState","useHistory","UploadPicture","history","image","setImage","imageLoading","setImageLoading","handleSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","ok","json","push","console","log","updateImage","file","target","files"],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/components/UploadImage/index.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UploadPicture = () => {\n    const history = useHistory(); // so that we can redirect after the image upload is successful\n    const [image, setImage] = useState(null);\n    const [imageLoading, setImageLoading] = useState(false);\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"image\", image);\n        \n        // aws uploads can be a bit slow—displaying\n        // some sort of loading message is a good idea\n        \n        setImageLoading(true); \n        const res = await fetch('/api/images', {\n            method: \"POST\",\n            body: formData,\n        });\n        if (res.ok) {\n            await res.json();\n            setImageLoading(false);\n            history.push(\"/images\");\n        }\n        else {\n            setImageLoading(false);\n            console.log(\"error\")\n        }\n    }\n    \n    const updateImage = (e) => {\n        const file = e.target.files[0];\n        setImage(file);\n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={updateImage}\n            />\n            <button type=\"submit\">Submit</button>\n            {(imageLoading)&& <p>Loading...</p>}\n        </form>\n    )\n}\n\nexport default UploadPicture;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAAC;AAG9C,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAMC,OAAO,GAAGF,UAAU,EAAE,CAAC,CAAC;EAC9B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAET,KAAK,CAAC;;IAE/B;IACA;;IAEAG,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IACF,IAAIG,GAAG,CAACI,EAAE,EAAE;MACR,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAChBZ,eAAe,CAAC,KAAK,CAAC;MACtBJ,OAAO,CAACiB,IAAI,CAAC,SAAS,CAAC;IAC3B,CAAC,MACI;MACDb,eAAe,CAAC,KAAK,CAAC;MACtBc,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACxB;EACJ,CAAC;EAED,MAAMC,WAAW,GAAId,CAAC,IAAK;IACvB,MAAMe,IAAI,GAAGf,CAAC,CAACgB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BrB,QAAQ,CAACmB,IAAI,CAAC;EAClB,CAAC;EAED,oBACI;IAAM,QAAQ,EAAEhB,YAAa;IAAA,wBACzB;MACE,IAAI,EAAC,MAAM;MACX,MAAM,EAAC,SAAS;MAChB,QAAQ,EAAEe;IAAY;MAAA;MAAA;MAAA;IAAA,QACtB,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EACnCjB,YAAY,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAAA;IAAA;IAAA;IAAA;EAAA,QAChC;AAEf,CAAC;AAAA,GA5CKJ,aAAa;EAAA,QACCD,UAAU;AAAA;AAAA,KADxBC,aAAa;AA8CnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}