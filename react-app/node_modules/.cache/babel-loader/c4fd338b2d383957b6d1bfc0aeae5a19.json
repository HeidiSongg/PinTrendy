{"ast":null,"code":"// import \"./CreatePinForm.css\";\n// import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { allPinsThunk,makePinThunk } from \"../../store/pin\";\n// import { useHistory } from \"react-router-dom\";\n// import UploadPicture from \"../UploadImage\";\n\n// const CreatePinForm = () => {\n//   const dispatch = useDispatch();\n//   const sessionUser = useSelector((state) => state.session.user);\n//   const history = useHistory();\n\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image_URL, setImageURL] = useState(\"\");\n//   const [errors, setErrors] = useState([]);\n\n//   const updateTitle = (e) => setTitle(e.target.value);\n//   const updateDescription = (e) => setDescription(e.target.value);\n//   const updateImageURL = (e) => setImageURL(e.target.value);\n\n//   useEffect(() => {\n//     dispatch(allPinsThunk());\n//   }, [dispatch]);\n\n//   let createdPin;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       title,\n//       description,\n//       image_URL,\n//     };\n\n//     createdPin = await dispatch(makePinThunk(payload))\n//     if (createdPin && createdPin.id) {\n//       history.push(`/pins/${createdPin.id}`)\n//     } else {\n//       setErrors(createdPin);\n//     }\n\n//   };\n\n//   const errorHandle = () => {\n//     if (errors.length > 0) {\n//       return (\n//         <div className='createPin-errors-container'>\n//           {errors.map((error, index) => (\n//             <li className='createPin-errors' key={index}>Error occurred - {error} </li>\n//           ))}\n//         </div>\n\n//       )\n//     }\n//   }\n\n//   return sessionUser.id ? (\n//     <div className = \"create-pin-container\">\n//     <section className=\"create-pin-form\">\n//       <form onSubmit={handleSubmit}>\n//         {errorHandle()}\n\n//         <div className='createPin-field'>\n//           <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-title'\n//             type=\"text\"\n//             rows='1'\n//             placeholder=\"Add your title\"\n//             value={title}\n//             onChange={updateTitle}\n//           />\n//         </div>\n\n//         <div>{sessionUser.username}</div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-description'\n//             type=\"text\"\n//             rows = '1'\n//             placeholder=\"Tell everyone what your pin is about\"\n//             value={description}\n//             onChange={updateDescription}\n//           />\n//         </div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <UploadPicture setImage={updateImageURL} image_URL={image_URL} />\n//         </div>\n\n//         <div className='createPin-save-container'>\n//           <button className='createPin-save' type=\"submit\">Save</button>\n//         </div>\n//       </form>\n//     </section>\n//     </div>\n//   ) : null;\n// };\n\n// export default CreatePinForm;","map":{"version":3,"names":[],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/components/CreatePinForm/index.js"],"sourcesContent":["// import \"./CreatePinForm.css\";\n// import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { allPinsThunk,makePinThunk } from \"../../store/pin\";\n// import { useHistory } from \"react-router-dom\";\n// import UploadPicture from \"../UploadImage\";\n\n// const CreatePinForm = () => {\n//   const dispatch = useDispatch();\n//   const sessionUser = useSelector((state) => state.session.user);\n//   const history = useHistory();\n\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image_URL, setImageURL] = useState(\"\");\n//   const [errors, setErrors] = useState([]);\n\n//   const updateTitle = (e) => setTitle(e.target.value);\n//   const updateDescription = (e) => setDescription(e.target.value);\n//   const updateImageURL = (e) => setImageURL(e.target.value);\n\n//   useEffect(() => {\n//     dispatch(allPinsThunk());\n//   }, [dispatch]);\n\n//   let createdPin;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       title,\n//       description,\n//       image_URL,\n//     };\n\n//     createdPin = await dispatch(makePinThunk(payload))\n//     if (createdPin && createdPin.id) {\n//       history.push(`/pins/${createdPin.id}`)\n//     } else {\n//       setErrors(createdPin);\n//     }\n\n//   };\n\n\n//   const errorHandle = () => {\n//     if (errors.length > 0) {\n//       return (\n//         <div className='createPin-errors-container'>\n//           {errors.map((error, index) => (\n//             <li className='createPin-errors' key={index}>Error occurred - {error} </li>\n//           ))}\n//         </div>\n\n//       )\n//     }\n//   }\n\n\n//   return sessionUser.id ? (\n//     <div className = \"create-pin-container\">\n//     <section className=\"create-pin-form\">\n//       <form onSubmit={handleSubmit}>\n//         {errorHandle()}\n\n//         <div className='createPin-field'>\n//           <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-title'\n//             type=\"text\"\n//             rows='1'\n//             placeholder=\"Add your title\"\n//             value={title}\n//             onChange={updateTitle}\n//           />\n//         </div>\n\n//         <div>{sessionUser.username}</div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-description'\n//             type=\"text\"\n//             rows = '1'\n//             placeholder=\"Tell everyone what your pin is about\"\n//             value={description}\n//             onChange={updateDescription}\n//           />\n//         </div>\n\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <UploadPicture setImage={updateImageURL} image_URL={image_URL} />\n//         </div>\n\n//         <div className='createPin-save-container'>\n//           <button className='createPin-save' type=\"submit\">Save</button>\n//         </div>\n//       </form>\n//     </section>\n//     </div>\n//   ) : null;\n// };\n\n// export default CreatePinForm;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}