{"ast":null,"code":"const GET_PINS = \"pins/getPins\";\nconst GET_ONE_PIN = \"pins/getOnePin\";\nconst ADD_PIN = \"pins/addPin\";\nconst EDIT_PIN = \"pins/editPin\";\nconst getPins = pins => {\n  return {\n    type: GET_PINS,\n    pins\n  };\n};\nconst getOnePin = pin => {\n  return {\n    type: GET_ONE_PIN,\n    pin\n  };\n};\nconst addPin = pin => {\n  return {\n    type: ADD_PIN,\n    pin\n  };\n};\nconst editPin = pin => {\n  return {\n    type: EDIT_PIN,\n    pin\n  };\n};\nexport const allPinsThunk = () => async dispatch => {\n  const res = await fetch(\"/api/pins/\");\n  const data = await res.json();\n  dispatch(getPins(data));\n  return res;\n};\nexport const onePinThunk = id => async dispatch => {\n  const res = await fetch(`/api/pins/${id}`);\n  const data = await res.json();\n  dispatch(getOnePin(data));\n  return res;\n};\nexport const makePinThunk = pin => async dispatch => {\n  const res = await fetch(\"/api/pins/new\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pin)\n  });\n  if (res.ok) {\n    const newPin = await res.json();\n    dispatch(addPin(newPin));\n    return newPin;\n  } else if (res.status < 500) {\n    const data = await res.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return [\"An error occurred. Please try again.\"];\n  }\n};\nexport const editPinThunk = pin => async dispatch => {\n  const res = await fetch(`/api/pins/${pin.pinId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(pin)\n  });\n  if (res.ok) {\n    const pinEdited = await res.json();\n    dispatch(editProduct(pinEdited));\n    return pinEdited;\n  }\n};\nconst initialState = {};\nconst pinReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_PINS:\n      let newState = {};\n      action.pins.pins.forEach(pin => {\n        newState[pin.id] = pin;\n      });\n      return newState;\n    case GET_ONE_PIN:\n      let newPinState = {};\n      newPinState[action.pin.id] = action.pin;\n      return newPinState;\n    case ADD_PIN:\n      let newAddPinState = {};\n      newAddPinState[action.pin.id] = action.pin;\n      return newAddPinState;\n    default:\n      return state;\n  }\n};\nexport default pinReducer;","map":{"version":3,"names":["GET_PINS","GET_ONE_PIN","ADD_PIN","EDIT_PIN","getPins","pins","type","getOnePin","pin","addPin","editPin","allPinsThunk","dispatch","res","fetch","data","json","onePinThunk","id","makePinThunk","method","headers","body","JSON","stringify","ok","newPin","status","errors","editPinThunk","pinId","pinEdited","editProduct","initialState","pinReducer","state","action","newState","forEach","newPinState","newAddPinState"],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/store/pin.js"],"sourcesContent":["const GET_PINS = \"pins/getPins\";\nconst GET_ONE_PIN = \"pins/getOnePin\";\nconst ADD_PIN = \"pins/addPin\";\nconst EDIT_PIN = \"pins/editPin\";\n\nconst getPins = (pins) => {\n    return {\n      type: GET_PINS,\n      pins,\n    };\n  };\n\nconst getOnePin = (pin) => {\n    return {\n      type: GET_ONE_PIN,\n      pin,\n    };\n  };\n\nconst addPin = (pin) => {\n    return {\n      type: ADD_PIN,\n      pin,\n    };\n  };\n\nconst editPin = (pin) => {\n    return {\n      type: EDIT_PIN,\n      pin,\n    };\n  };\n\n  export const allPinsThunk = () => async (dispatch) => {\n    const res = await fetch(\"/api/pins/\");\n    const data = await res.json();\n    dispatch(getPins(data));\n    return res;\n  };\n\n  export const onePinThunk = (id) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${id}`);\n    const data = await res.json();\n    dispatch(getOnePin(data));\n    return res;\n  };  \n\nexport const makePinThunk = (pin) => async (dispatch) => {\n    const res = await fetch(\"/api/pins/new\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(pin),\n    });\n  \n    if (res.ok) {\n      const newPin = await res.json();\n      dispatch(addPin(newPin));\n      return newPin;\n    } else if (res.status < 500) {\n          const data = await res.json();\n          if (data.errors) {\n              return data.errors;\n          }\n      } else {\n          return [\"An error occurred. Please try again.\"];\n      }\n  };  \n\nexport const editPinThunk = (pin) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${pin.pinId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(pin),\n    });\n  \n    if (res.ok) {\n      const pinEdited = await res.json();\n      dispatch(editProduct(pinEdited));\n      return pinEdited;\n    }\n  };  \n\nconst initialState = {};\n\nconst pinReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_PINS:\n      let newState = {};\n      action.pins.pins.forEach((pin) => {\n        newState[pin.id] = pin;\n      });\n      return newState;\n    case GET_ONE_PIN:\n      let newPinState = {};\n        newPinState[action.pin.id] = action.pin;\n        return newPinState;\n    case ADD_PIN:\n      let newAddPinState = {}\n      newAddPinState[action.pin.id] = action.pin;\n      return newAddPinState;\n    default:\n      return state;\n  }\n};\n\nexport default pinReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}