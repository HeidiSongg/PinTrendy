{"ast":null,"code":"const GET_COMMENTS_PIN = \"pins/getCommentsByPinId\";\nconst ADD_COMMENT = \"pins/addComment\";\nconst getCommentsByPinId = comments => {\n  return {\n    type: GET_COMMENTS_PIN,\n    comments\n  };\n};\nconst addComment = comment => {\n  return {\n    type: ADD_COMMENT,\n    comment\n  };\n};\nexport const allCommentsByPinIdThunk = pinId => async dispatch => {\n  const res = await fetch(`/api/pins/${pinId}/comments`);\n  const data = await res.json();\n  console.log('###', data.comments);\n  dispatch(getCommentsByPinId(data.comments));\n  return res;\n};\nconst initialState = {};\nconst commentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_COMMENTS_PIN:\n      let newState = {};\n      action.comments.forEach(comment => {\n        newState[comment.id] = comment;\n      });\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default commentReducer;","map":{"version":3,"names":["GET_COMMENTS_PIN","ADD_COMMENT","getCommentsByPinId","comments","type","addComment","comment","allCommentsByPinIdThunk","pinId","dispatch","res","fetch","data","json","console","log","initialState","commentReducer","state","action","newState","forEach","id"],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/store/comment.js"],"sourcesContent":["const GET_COMMENTS_PIN = \"pins/getCommentsByPinId\";\nconst ADD_COMMENT = \"pins/addComment\";\n\nconst getCommentsByPinId = (comments) => {\n    return {\n      type: GET_COMMENTS_PIN,\n      comments,\n    };\n  };\n\n  const addComment = (comment) => {\n    return {\n      type: ADD_COMMENT,\n      comment,\n    };\n  };\n\n  export const allCommentsByPinIdThunk = (pinId) => async (dispatch) => {\n    const res = await fetch(`/api/pins/${pinId}/comments`);\n    const data = await res.json();\n    console.log('###',data.comments)\n    dispatch(getCommentsByPinId(data.comments));\n    return res;\n  };\n\n  const initialState = {};\n\n  const commentReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case GET_COMMENTS_PIN:\n        let newState = {};\n        action.comments.forEach((comment) => {\n          newState[comment.id] = comment;\n        });\n        return newState;\n      default:\n        return state;\n    }\n  };\n  \n  export default commentReducer;\n  "],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,yBAAyB;AAClD,MAAMC,WAAW,GAAG,iBAAiB;AAErC,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,OAAO;IACLC,IAAI,EAAEJ,gBAAgB;IACtBG;EACF,CAAC;AACH,CAAC;AAED,MAAME,UAAU,GAAIC,OAAO,IAAK;EAC9B,OAAO;IACLF,IAAI,EAAEH,WAAW;IACjBK;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAIC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACpE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,aAAYH,KAAM,WAAU,CAAC;EACtD,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;EAC7BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACH,IAAI,CAACT,QAAQ,CAAC;EAChCM,QAAQ,CAACP,kBAAkB,CAACU,IAAI,CAACT,QAAQ,CAAC,CAAC;EAC3C,OAAOO,GAAG;AACZ,CAAC;AAED,MAAMM,YAAY,GAAG,CAAC,CAAC;AAEvB,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAClD,QAAQA,MAAM,CAACf,IAAI;IACjB,KAAKJ,gBAAgB;MACnB,IAAIoB,QAAQ,GAAG,CAAC,CAAC;MACjBD,MAAM,CAAChB,QAAQ,CAACkB,OAAO,CAAEf,OAAO,IAAK;QACnCc,QAAQ,CAACd,OAAO,CAACgB,EAAE,CAAC,GAAGhB,OAAO;MAChC,CAAC,CAAC;MACF,OAAOc,QAAQ;IACjB;MACE,OAAOF,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module"}