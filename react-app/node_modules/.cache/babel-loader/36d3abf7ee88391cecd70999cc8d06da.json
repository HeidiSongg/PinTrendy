{"ast":null,"code":"var _jsxFileName = \"/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/components/CreatePinForm/index.js\",\n  _s = $RefreshSig$();\n// import \"./CreatePinForm.css\";\n// import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { allPinsThunk,makePinThunk } from \"../../store/pin\";\n// import { useHistory } from \"react-router-dom\";\n// import UploadPicture from \"../UploadImage\";\n\n// const CreatePinForm = () => {\n//   const dispatch = useDispatch();\n//   const sessionUser = useSelector((state) => state.session.user);\n//   const history = useHistory();\n\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image_URL, setImageURL] = useState(\"\");\n//   const [errors, setErrors] = useState([]);\n\n//   const updateTitle = (e) => setTitle(e.target.value);\n//   const updateDescription = (e) => setDescription(e.target.value);\n//   const updateImageURL = (e) => setImageURL(e.target.value);\n\n//   useEffect(() => {\n//     dispatch(allPinsThunk());\n//   }, [dispatch]);\n\n//   let createdPin;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       title,\n//       description,\n//       image_URL,\n//     };\n\n//     createdPin = await dispatch(makePinThunk(payload))\n//     if (createdPin && createdPin.id) {\n//       history.push(`/pins/${createdPin.id}`)\n//     } else {\n//       setErrors(createdPin);\n//     }\n\n//   };\n\n//   const errorHandle = () => {\n//     if (errors.length > 0) {\n//       return (\n//         <div className='createPin-errors-container'>\n//           {errors.map((error, index) => (\n//             <li className='createPin-errors' key={index}>Error occurred - {error} </li>\n//           ))}\n//         </div>\n\n//       )\n//     }\n//   }\n\n//   return sessionUser.id ? (\n//     <div className = \"create-pin-container\">\n//     <section className=\"create-pin-form\">\n//       <form onSubmit={handleSubmit}>\n//         {errorHandle()}\n\n//         <div className='createPin-field'>\n//           <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-title'\n//             type=\"text\"\n//             rows='1'\n//             placeholder=\"Add your title\"\n//             value={title}\n//             onChange={updateTitle}\n//           />\n//         </div>\n\n//         <div>{sessionUser.username}</div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-description'\n//             type=\"text\"\n//             rows = '1'\n//             placeholder=\"Tell everyone what your pin is about\"\n//             value={description}\n//             onChange={updateDescription}\n//           />\n//         </div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <UploadPicture setImage={updateImageURL} image_URL={image_URL} />\n//         </div>\n\n//         <div className='createPin-save-container'>\n//           <button className='createPin-save' type=\"submit\">Save</button>\n//         </div>\n//       </form>\n//     </section>\n//     </div>\n//   ) : null;\n// };\n\n// export default CreatePinForm;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allPinsThunk, makePinThunk } from \"../../store/pin\";\nimport { useHistory } from \"react-router-dom\";\nimport UploadImage from \"../UploadImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePinForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const history = useHistory();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image_URL, setImageURL] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const updateTitle = e => setTitle(e.target.value);\n  const updateDescription = e => setDescription(e.target.value);\n  const updateImageURL = e => setImageURL(e.target.value);\n  useEffect(() => {\n    dispatch(allPinsThunk());\n  }, [dispatch]);\n  let createdPin;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      title,\n      description,\n      image_URL\n    };\n    createdPin = await dispatch(makePinThunk(payload));\n    if (createdPin && createdPin.id) {\n      history.push(`/pins/${createdPin.id}`);\n    } else {\n      setErrors(createdPin);\n    }\n  };\n  const errorHandle = () => {\n    if (errors.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createPin-errors-container\",\n        children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"createPin-errors\",\n          children: [\"Error occurred - \", error, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return sessionUser.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-pin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"create-pin-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [errorHandle(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createPin-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createPin-keys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"createPin-input-title\",\n            type: \"text\",\n            rows: \"1\",\n            placeholder: \"Add your title\",\n            value: title,\n            onChange: updateTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: sessionUser.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createPin-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createPin-keys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"createPin-input-description\",\n            type: \"text\",\n            rows: \"1\",\n            placeholder: \"Tell everyone what your pin is about\",\n            value: description,\n            onChange: updateDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createPin-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createPin-keys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UploadImage, {\n            setImage: updateImageURL,\n            image_URL: image_URL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createPin-save-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"createPin-save\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(CreatePinForm, \"SPRoOcFh2rgrUzRUmNR5yxtCM+0=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n_c = CreatePinForm;\nexport default CreatePinForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePinForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","allPinsThunk","makePinThunk","useHistory","UploadImage","CreatePinForm","dispatch","sessionUser","state","session","user","history","title","setTitle","description","setDescription","image_URL","setImageURL","errors","setErrors","updateTitle","e","target","value","updateDescription","updateImageURL","createdPin","handleSubmit","preventDefault","payload","id","push","errorHandle","length","map","error","index","username"],"sources":["/Users/heidisong/Desktop/App_Academy/Project/PinTrendy/react-app/src/components/CreatePinForm/index.js"],"sourcesContent":["// import \"./CreatePinForm.css\";\n// import { useEffect, useState } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { allPinsThunk,makePinThunk } from \"../../store/pin\";\n// import { useHistory } from \"react-router-dom\";\n// import UploadPicture from \"../UploadImage\";\n\n// const CreatePinForm = () => {\n//   const dispatch = useDispatch();\n//   const sessionUser = useSelector((state) => state.session.user);\n//   const history = useHistory();\n\n//   const [title, setTitle] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image_URL, setImageURL] = useState(\"\");\n//   const [errors, setErrors] = useState([]);\n\n//   const updateTitle = (e) => setTitle(e.target.value);\n//   const updateDescription = (e) => setDescription(e.target.value);\n//   const updateImageURL = (e) => setImageURL(e.target.value);\n\n//   useEffect(() => {\n//     dispatch(allPinsThunk());\n//   }, [dispatch]);\n\n//   let createdPin;\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       title,\n//       description,\n//       image_URL,\n//     };\n\n//     createdPin = await dispatch(makePinThunk(payload))\n//     if (createdPin && createdPin.id) {\n//       history.push(`/pins/${createdPin.id}`)\n//     } else {\n//       setErrors(createdPin);\n//     }\n\n//   };\n\n\n//   const errorHandle = () => {\n//     if (errors.length > 0) {\n//       return (\n//         <div className='createPin-errors-container'>\n//           {errors.map((error, index) => (\n//             <li className='createPin-errors' key={index}>Error occurred - {error} </li>\n//           ))}\n//         </div>\n\n//       )\n//     }\n//   }\n\n\n//   return sessionUser.id ? (\n//     <div className = \"create-pin-container\">\n//     <section className=\"create-pin-form\">\n//       <form onSubmit={handleSubmit}>\n//         {errorHandle()}\n\n//         <div className='createPin-field'>\n//           <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-title'\n//             type=\"text\"\n//             rows='1'\n//             placeholder=\"Add your title\"\n//             value={title}\n//             onChange={updateTitle}\n//           />\n//         </div>\n\n//         <div>{sessionUser.username}</div>\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <textarea\n//             className='createPin-input-description'\n//             type=\"text\"\n//             rows = '1'\n//             placeholder=\"Tell everyone what your pin is about\"\n//             value={description}\n//             onChange={updateDescription}\n//           />\n//         </div>\n\n\n//         <div className='createPin-field'>\n//         <div className='createPin-keys'>\n//           </div>\n//           <UploadPicture setImage={updateImageURL} image_URL={image_URL} />\n//         </div>\n\n//         <div className='createPin-save-container'>\n//           <button className='createPin-save' type=\"submit\">Save</button>\n//         </div>\n//       </form>\n//     </section>\n//     </div>\n//   ) : null;\n// };\n\n// export default CreatePinForm;\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { allPinsThunk, makePinThunk } from \"../../store/pin\";\nimport { useHistory } from \"react-router-dom\";\nimport UploadImage from \"../UploadImage\";\n\nconst CreatePinForm = () => {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const history = useHistory();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image_URL, setImageURL] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const updateTitle = (e) => setTitle(e.target.value);\n  const updateDescription = (e) => setDescription(e.target.value);\n  const updateImageURL = (e) => setImageURL(e.target.value);\n\n  useEffect(() => {\n    dispatch(allPinsThunk());\n  }, [dispatch]);\n\n  let createdPin;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      title,\n      description,\n      image_URL,\n    };\n\n    createdPin = await dispatch(makePinThunk(payload));\n    if (createdPin && createdPin.id) {\n      history.push(`/pins/${createdPin.id}`);\n    } else {\n      setErrors(createdPin);\n    }\n  };\n\n  const errorHandle = () => {\n    if (errors.length > 0) {\n      return (\n        <div className=\"createPin-errors-container\">\n          {errors.map((error, index) => (\n            <li className=\"createPin-errors\" key={index}>\n              Error occurred - {error}{\" \"}\n            </li>\n          ))}\n        </div>\n      );\n    }\n  };\n\n  return sessionUser.id ? (\n    <div className=\"create-pin-container\">\n      <section className=\"create-pin-form\">\n        <form onSubmit={handleSubmit}>\n          {errorHandle()}\n\n          <div className=\"createPin-field\">\n            <div className=\"createPin-keys\"></div>\n            <textarea\n              className=\"createPin-input-title\"\n              type=\"text\"\n              rows=\"1\"\n              placeholder=\"Add your title\"\n              value={title}\n              onChange={updateTitle}\n            />\n          </div>\n\n          <div>{sessionUser.username}</div>\n\n          <div className=\"createPin-field\">\n            <div className=\"createPin-keys\"></div>\n            <textarea\n              className=\"createPin-input-description\"\n              type=\"text\"\n              rows=\"1\"\n              placeholder=\"Tell everyone what your pin is about\"\n              value={description}\n              onChange={updateDescription}\n            />\n          </div>\n\n          <div className=\"createPin-field\">\n            <div className=\"createPin-keys\"></div>\n            <UploadImage setImage={updateImageURL} image_URL={image_URL} />\n          </div>\n\n          <div className=\"createPin-save-container\">\n            <button className=\"createPin-save\" type=\"submit\">\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    </div>\n  ) : null;\n};\n\nexport default CreatePinForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}